name: CI
on:
  pull_request:
  push:

permissions:
  contents: read

env:
  RUST_BACKTRACE: full

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: cargo fmt
        run: cargo fmt --all -- --check
  
  wasm:
    name: wasm32 build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: wasm32 build
        run: cargo build --target=wasm32-unknown-unknown

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: cargo clippy
        run: cargo clippy --workspace --all-targets -- -Dwarnings
      - name: cargo doc
        run: cargo doc --workspace ${{ matrix.feature_flag }}
        env:
          RUSTDOCFLAGS: -Dwarnings

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable, beta, '1.74'] # NB. Sync with Cargo.toml.
        include:
          - os: ubuntu-latest
            feature_flag: --features=beta
    name: Test ${{ matrix.os }} ${{ matrix.rust }} ${{ matrix.feature_flag }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Build
        run: cargo build ${{ matrix.feature_flag }}
      - name: Test
        if: ${{ matrix.rust != '1.66.1' }}
        run: cargo test ${{ matrix.feature_flag }}
